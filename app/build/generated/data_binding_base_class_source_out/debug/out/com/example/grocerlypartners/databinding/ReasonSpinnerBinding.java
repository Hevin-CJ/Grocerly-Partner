// Generated by view binder compiler. Do not edit!
package com.example.grocerlypartners.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.grocerlypartners.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReasonSpinnerBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton canceorderbtn;

  @NonNull
  public final MaterialButton dismissbtn;

  @NonNull
  public final Spinner spinnerreason;

  @NonNull
  public final TextView textView15;

  private ReasonSpinnerBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton canceorderbtn, @NonNull MaterialButton dismissbtn,
      @NonNull Spinner spinnerreason, @NonNull TextView textView15) {
    this.rootView = rootView;
    this.canceorderbtn = canceorderbtn;
    this.dismissbtn = dismissbtn;
    this.spinnerreason = spinnerreason;
    this.textView15 = textView15;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReasonSpinnerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReasonSpinnerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.reason_spinner, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReasonSpinnerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.canceorderbtn;
      MaterialButton canceorderbtn = ViewBindings.findChildViewById(rootView, id);
      if (canceorderbtn == null) {
        break missingId;
      }

      id = R.id.dismissbtn;
      MaterialButton dismissbtn = ViewBindings.findChildViewById(rootView, id);
      if (dismissbtn == null) {
        break missingId;
      }

      id = R.id.spinnerreason;
      Spinner spinnerreason = ViewBindings.findChildViewById(rootView, id);
      if (spinnerreason == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      return new ReasonSpinnerBinding((MaterialCardView) rootView, canceorderbtn, dismissbtn,
          spinnerreason, textView15);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
